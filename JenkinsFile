pipeline {
    agent {
        label 'AGENT-1'
    }
    options {
        timeout(time: 30, unit:'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters{
        choice(name: 'action', choices:['Apply', 'Destroy'], description: 'Pick something')
    }

}  
    stages {
        stage('init') {
            steps {
                sh """
                 cd 01-vpc
                 terraform init -reconfigure
                """
            }
        }
        stage('plan') {
            when{
                expression{
                    params.action == 'Apply'
                }
            }
            
            steps {
                sh """
                 cd 01-vpc
                 terraform plan
                """
            }
        }
        stage('deploy') {
            when{
                expression{
                    params.action == 'Apply'
                }
            input {
                message "Should we continue?"
                ok "Yes, we should."
            }
            steps {
                sh """
                 cd 01-vpc
                 terraform apply --auto-approve
                """
            }
        }
        
    }

        stage('Destroy') {
            when{
                expression{
                    params.action == 'Destroy'
                }
            input {
                message "Should we continue?"
                ok "Yes, we should."
            }
            steps {
                sh """
                 cd 01-vpc
                 terraform destroy --auto-approve
                """
            }
        }
        
    }
          
    post{
        always{
            echo " i will always say hellow again"
            deleteDir()
        }
        success{
            echo " i will run when pipeline is success"
        }
        failure{
            echo " i will run when pipeline is failure"
        }
    }
}
